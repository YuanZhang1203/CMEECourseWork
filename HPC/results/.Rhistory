# sum all octaves in file i
octaves_tot <- sum_vect(octaves_tot, octaves_list[[j]])
# count all octaves in file i
counter <- counter + 1
}
}
# set if statements to sum octaves over each size
if (size == 500){
octaves_500 <- sum_vect(octaves_500, octaves_tot)
# add file i count to total count for that size
counter_500 <- counter_500 + counter
}
if (size == 1000){
octaves_1000 <- sum_vect(octaves_1000, octaves_tot)
counter_1000 <- counter_1000 + counter
}
if (size == 2500){
octaves_2500 <- sum_vect(octaves_2500, octaves_tot)
counter_2500 <- counter_2500 + counter
}
if (size == 5000){
octaves_5000 <- sum_vect(octaves_5000, octaves_tot)
counter_5000 <- counter_5000 + counter
}
}
# calculate mean for each octave bin per size
octaves_means_500 <- octaves_500 / counter_500
octaves_means_1000 <- octaves_1000 / counter_1000
octaves_means_2500 <- octaves_2500 / counter_2500
octaves_means_5000 <- octaves_5000 / counter_5000
# clear any existing graphs and plot your graph within the R window
graphics.off()
par(mfrow = c(2, 2), oma=c(0,0,2.5,0)) # edit outer margin property to make space for title
barplot(octaves_means_500,
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 500",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999", # colour-blind friendly, neutral colour
names.arg = 1:length(octaves_500)) # print octaves on x-axis
barplot(octaves_means_1000,
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 1000",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999",
names.arg = 1:length(octaves_1000))
barplot(octaves_means_2500,
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 2500",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999",
names.arg = 1:length(octaves_2500))
barplot(octaves_means_5000,
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 5000",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999",
names.arg = 1:length(octaves_5000))
title(main = "Mean species abundance octaves for different community sizes", outer=TRUE)
process_cluster_results <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
# initialise empty vectors to store sum totals of octave data for each size
octaves_500 <- c()
octaves_1000 <- c()
octaves_2500 <- c()
octaves_5000 <- c()
# set counters to count each octave per size
counter_500 <- 0
counter_1000 <- 0
counter_2500 <- 0
counter_5000 <- 0
# generate list of results files
files <- list.files(path = "../Results/results/", pattern = "*.rda")
# set for loop over files to extract octave information
for (i in files){
load(paste0("../Results/results/",i)) # load each file
octaves_tot <- c() # initliase empty octave vector for i file octave sum
counter <- 0 # reset counter to 0
# loop over each octave in file i
for (j in 1:length(octaves_list)){
if (j > (burn_in_generations/interval_oct)){ # don't inlcude octaves from burn in period
# sum all octaves in file i
octaves_tot <- sum_vect(octaves_tot, octaves_list[[j]])
# count all octaves in file i
counter <- counter + 1
}
}
# set if statements to sum octaves over each size
if (size == 500){
octaves_500 <- sum_vect(octaves_500, octaves_tot)
# add file i count to total count for that size
counter_500 <- counter_500 + counter
}
if (size == 1000){
octaves_1000 <- sum_vect(octaves_1000, octaves_tot)
counter_1000 <- counter_1000 + counter
}
if (size == 2500){
octaves_2500 <- sum_vect(octaves_2500, octaves_tot)
counter_2500 <- counter_2500 + counter
}
if (size == 5000){
octaves_5000 <- sum_vect(octaves_5000, octaves_tot)
counter_5000 <- counter_5000 + counter
}
}
# calculate mean for each octave bin per size
octaves_means_500 <- octaves_500 / counter_500
octaves_means_1000 <- octaves_1000 / counter_1000
octaves_means_2500 <- octaves_2500 / counter_2500
octaves_means_5000 <- octaves_5000 / counter_5000
# clear any existing graphs and plot your graph within the R window
graphics.off()
par(mfrow = c(2, 2), oma=c(0,0,2.5,0)) # edit outer margin property to make space for title
barplot(octaves_means_500,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 500",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999", # colour-blind friendly, neutral colour
names.arg = 1:length(octaves_500)) # print octaves on x-axis
barplot(octaves_means_1000,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 1000",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999",
names.arg = 1:length(octaves_1000))
barplot(octaves_means_2500,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 2500",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999",
names.arg = 1:length(octaves_2500))
barplot(octaves_means_5000,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 5000",
cex.main = 0.9,
cex.names = 0.9,
col = "#999999",
names.arg = 1:length(octaves_5000))
title(main = "Mean species abundance octaves for different community sizes", outer=TRUE)
}
graphics.off()
# initialise empty vectors to store sum totals of octave data for each size
octaves_500 = c()
octaves_1000 = c()
octaves_2500 = c()
octaves_5000 = c()
# set counters to count each octave per size
counter_500 = 0
counter_1000 = 0
counter_2500 = 0
counter_5000 = 0
# generate list of results files
files <- list.files(path = "../Results/results/", pattern = "*.rda")
# set for loop over files to extract octave information
for (i in files){
load(paste0("cluster_run_",i,".rda")) # load each file
octaves_tot <- c() # initliase empty octave vector for i file octave sum
counter <- 0 # reset counter to 0
# loop over each octave in file i
for (j in 1:length(octaves_list)){
if (j > (burn_in_generations/interval_oct)){ # don't inlcude octaves from burn in period
# sum all octaves in file i
octaves_tot <- sum_vect(octaves_tot, octaves_list[[j]])
# count all octaves in file i
counter <- counter + 1
}
}
# set if statements to sum octaves over each size
if (size == 500){
octaves_500 <- sum_vect(octaves_500, octaves_tot)
# add file i count to total count for that size
counter_500 <- counter_500 + counter
}
if (size == 1000){
octaves_1000 <- sum_vect(octaves_1000, octaves_tot)
counter_1000 <- counter_1000 + counter
}
if (size == 2500){
octaves_2500 <- sum_vect(octaves_2500, octaves_tot)
counter_2500 <- counter_2500 + counter
}
if (size == 5000){
octaves_5000 <- sum_vect(octaves_5000, octaves_tot)
counter_5000 <- counter_5000 + counter
}
}
# calculate mean for each octave bin per size
octaves_means_500 <- octaves_500 / counter_500
octaves_means_1000 <- octaves_1000 / counter_1000
octaves_means_2500 <- octaves_2500 / counter_2500
octaves_means_5000 <- octaves_5000 / counter_5000
# clear any existing graphs and plot your graph within the R window
graphics.off()
par(mfrow = c(2, 2), oma=c(0,0,2.5,0)) # edit outer margin property to make space for title
barplot(octaves_means_500,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 500",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_500)) # print octaves on x-axis
barplot(octaves_means_1000,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 1000",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_1000))
barplot(octaves_means_2500,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 2500",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_2500))
barplot(octaves_means_5000,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves (log2)",
main = "Community of size 5000",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_5000))
title(main = "Mean species abundance octaves for different community sizes", outer=TRUE)
# create list output to be returned and save as rda file
combined_results <- list(octaves_means_500, octaves_means_1000, octaves_means_2500, octaves_means_5000)
save(combined_results, file = "../Results/yuan_cluster_results.rda")
return(combined_results)
graphics.off()
# initialise empty vectors to store sum totals of octave data for each size
octaves_500 = c()
octaves_1000 = c()
octaves_2500 = c()
octaves_5000 = c()
# set counters to count each octave per size
counter_500 = 0
counter_1000 = 0
counter_2500 = 0
counter_5000 = 0
# generate list of results files
files <- list.files(path = "../Results/results/", pattern = "*.rda")
# set for loop over files to extract octave information
for (i in files){
load(paste0("cluster_run_",i,".rda")) # load each file
octaves_tot <- c() # initliase empty octave vector for i file octave sum
counter <- 0 # reset counter to 0
# loop over each octave in file i
for (j in 1:length(octaves_list)){
if (j > (burn_in_generations/interval_oct)){ # don't inlcude octaves from burn in period
# sum all octaves in file i
octaves_tot <- sum_vect(octaves_tot, octaves_list[[j]])
# count all octaves in file i
counter <- counter + 1
}
}
# set if statements to sum octaves over each size
if (size == 500){
octaves_500 <- sum_vect(octaves_500, octaves_tot)
# add file i count to total count for that size
counter_500 <- counter_500 + counter
}
if (size == 1000){
octaves_1000 <- sum_vect(octaves_1000, octaves_tot)
counter_1000 <- counter_1000 + counter
}
if (size == 2500){
octaves_2500 <- sum_vect(octaves_2500, octaves_tot)
counter_2500 <- counter_2500 + counter
}
if (size == 5000){
octaves_5000 <- sum_vect(octaves_5000, octaves_tot)
counter_5000 <- counter_5000 + counter
}
}
# calculate mean for each octave bin per size
octaves_means_500 <- octaves_500 / counter_500
octaves_means_1000 <- octaves_1000 / counter_1000
octaves_means_2500 <- octaves_2500 / counter_2500
octaves_means_5000 <- octaves_5000 / counter_5000
# clear any existing graphs and plot your graph within the R window
graphics.off()
par(mfrow = c(2, 2), oma=c(0,0,2.5,0)) # edit outer margin property to make space for title
barplot(octaves_means_500,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 500",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_500)) # print octaves on x-axis
barplot(octaves_means_1000,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 1000",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_1000))
barplot(octaves_means_2500,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 2500",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_2500))
barplot(octaves_means_5000,ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 5000",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_5000))
title(main = "Mean species abundance octaves for different community sizes", outer=TRUE)
# create list output to be returned and save as rda file
combined_results <- list(octaves_means_500, octaves_means_1000, octaves_means_2500, octaves_means_5000)
save(combined_results, file = "../Results/yuan_cluster_results.rda")
return(combined_results)
graphics.off()
# initialise empty vectors to store sum totals of octave data for each size
octaves_500 = c()
octaves_1000 = c()
octaves_2500 = c()
octaves_5000 = c()
# set counters to count each octave per size
counter_500 = 0
counter_1000 = 0
counter_2500 = 0
counter_5000 = 0
# generate list of results files
files <- list.files(path = "../Results/results/", pattern = "*.rda")
# set for loop over files to extract octave information
for (i in files){
load(paste0("cluster_run_",i,".rda")) # load each file
octaves_tot = c() # initliase empty octave vector for i file octave sum
counter = 0 # reset counter to 0
# loop over each octave in file i
for (j in 1:length(octaves_list)){
if (j > (burn_in_generations/interval_oct)){ # don't inlcude octaves from burn in period
# sum all octaves in file i
octaves_tot = sum_vect(octaves_tot, octaves_list[[j]])
# count all octaves in file i
counter = counter + 1
}
}
# set if statements to sum octaves over each size
if (size == 500){
octaves_500 = sum_vect(octaves_500, octaves_tot)
# add file i count to total count for that size
counter_500 = counter_500 + counter
}
if (size == 1000){
octaves_1000 = sum_vect(octaves_1000, octaves_tot)
counter_1000 = counter_1000 + counter
}
if (size == 2500){
octaves_2500 = sum_vect(octaves_2500, octaves_tot)
counter_2500 = counter_2500 + counter
}
if (size == 5000){
octaves_5000 = sum_vect(octaves_5000, octaves_tot)
counter_5000 = counter_5000 + counter
}
}
# calculate mean for each octave bin per size
octaves_means_500 = octaves_500 / counter_500
octaves_means_1000 = octaves_1000 / counter_1000
octaves_means_2500 = octaves_2500 / counter_2500
octaves_means_5000 = octaves_5000 / counter_5000
# clear any existing graphs and plot your graph within the R window
graphics.off()
par(mfrow = c(2, 2), oma=c(0,0,2.5,0)) # edit outer margin property to make space for title
barplot(octaves_means_500,xlim = c(1:20), ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 500",
cex.main = 0.9,
cex.names = 0.9,
col = "grey",
names.arg = 1:length(octaves_500)) # print octaves on x-axis
barplot(octaves_means_1000,xlim = c(1:20), ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 1000",
cex.main = 0.9,
cex.names = 0.9,
col = "red",
names.arg = 1:length(octaves_1000))
barplot(octaves_means_2500,xlim = c(1:20), ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 2500",
cex.main = 0.9,
cex.names = 0.9,
col = "yellow",
names.arg = 1:length(octaves_2500))
barplot(octaves_means_5000,xlim = c(1:20), ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 5000",
cex.main = 0.9,
cex.names = 0.9,
col = "blue",
names.arg = 1:length(octaves_5000))
title(main = "Mean species abundance octaves for different community sizes", outer=TRUE)
# create list output to be returned and save as rda file
combined_results = list(octaves_means_500, octaves_means_1000, octaves_means_2500, octaves_means_5000)
save(combined_results, file = "../Results/yuan_cluster_results.rda")
return(combined_results)
graphics.off()
# initialise empty vectors to store sum totals of octave data for each size
octaves_500 = c()
octaves_1000 = c()
octaves_2500 = c()
octaves_5000 = c()
# set counters to count each octave per size
counter_500 = 0
counter_1000 = 0
counter_2500 = 0
counter_5000 = 0
# generate list of results files
files <- list.files(path = "../Results/results/", pattern = "*.rda")
# set for loop over files to extract octave information
for (i in files){
load(paste0("cluster_run_",i,".rda")) # load each file
octaves_tot = c() # initliase empty octave vector for i file octave sum
counter = 0 # reset counter to 0
# loop over each octave in file i
for (j in 1:length(octaves_list)){
if (j > (burn_in_generations/interval_oct)){ # don't inlcude octaves from burn in period
# sum all octaves in file i
octaves_tot = sum_vect(octaves_tot, octaves_list[[j]])
# count all octaves in file i
counter = counter + 1
}
}
# set if statements to sum octaves over each size
if (size == 500){
octaves_500 = sum_vect(octaves_500, octaves_tot)
# add file i count to total count for that size
counter_500 = counter_500 + counter
}
if (size == 1000){
octaves_1000 = sum_vect(octaves_1000, octaves_tot)
counter_1000 = counter_1000 + counter
}
if (size == 2500){
octaves_2500 = sum_vect(octaves_2500, octaves_tot)
counter_2500 = counter_2500 + counter
}
if (size == 5000){
octaves_5000 = sum_vect(octaves_5000, octaves_tot)
counter_5000 = counter_5000 + counter
}
}
# calculate mean for each octave bin per size
octaves_means_500 = octaves_500 / counter_500
octaves_means_1000 = octaves_1000 / counter_1000
octaves_means_2500 = octaves_2500 / counter_2500
octaves_means_5000 = octaves_5000 / counter_5000
# clear any existing graphs and plot your graph within the R window
graphics.off()
par(mfrow = c(2, 2), oma=c(0,0,2.5,0)) # edit outer margin property to make space for title
barplot(octaves_means_500, ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 500",
col = "grey",
names.arg = 1:length(octaves_500)) # print octaves on x-axis
barplot(octaves_means_1000, ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 1000",
col = "red",
names.arg = 1:length(octaves_1000))
barplot(octaves_means_2500, ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 2500",
col = "yellow",
names.arg = 1:length(octaves_2500))
barplot(octaves_means_5000, ylim = c(0,max(octaves_means_500)+1),
ylab = "Mean species abundance",
xlab = "Species abundance octaves",
main = "Community of size 5000",
col = "blue",
names.arg = 1:length(octaves_5000))
title(main = "Mean species abundance octaves for different community sizes", outer=TRUE)
# create list output to be returned and save as rda file
combined_results = list(octaves_means_500, octaves_means_1000, octaves_means_2500, octaves_means_5000)
save(combined_results, file = "../Results/yuan_cluster_results.rda")
return(combined_results)
